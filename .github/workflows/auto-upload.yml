name: Auto Upload

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  upload:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install

      - name: Validate plugins list
        id: validate
        run: npm run validate

      - name: Comment on PR if validation fails
        if: ${{ failure() && github.event_name == 'pull_request' && steps.validate.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            const output = `❌ 插件列表验证失败，请检查以下问题：

            \`\`\`
            ${process.env.BUILD_OUTPUT}
            \`\`\`

            请按照文档规范修改插件信息。`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: output
            })
        env:
          BUILD_OUTPUT: ${{ steps.validate.outputs.build_output }}

      - name: Comment on PR if build fails
        if: ${{ failure() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const output = `❌ 编译失败，错误信息：

            \`\`\`
            ${process.env.BUILD_OUTPUT}
            \`\`\`

            请检查以上错误并修复问题。`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: output
            })
        env:
          BUILD_OUTPUT: ${{ steps.build.outputs.build_output }}

      - name: Handle successful PR build
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          # 创建一个临时目录来存放预览文件
          mkdir -p preview
          # 运行 cp 命令更新 package.json
          npm run cp
          # 复制预览文件
          cp package.json preview/
          echo "预览文件已准备完成"

      - name: Upload preview artifacts
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: preview-files
          path: preview/package.json
          retention-days: 5

      - name: Comment on PR if build succeeds
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: '✅ 编译成功！\n\n预览文件已生成，请在 Actions 的 Artifacts 中下载 package.json 进行预览。\n如果预览无误，可以合并PR。'
            })
      
      # - name: Push package.json for main branch
      #   if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      #   run: |
      #     git config --global user.name 'github-actions[bot]'
      #     git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
      #     # 先运行 cp 命令更新 package.json
      #     npm run cp
          
      #     # 克隆目标仓库
      #     git clone https://${{ secrets.PAT }}@github.com/KarinJS/files.git temp_repo
          
      #     # 复制 package.json
      #     cp package.json temp_repo/
      #     cd temp_repo
          
      #     # 检查是否有文件变动
      #     if git diff --quiet; then
      #       echo "package.json 没有变动，跳过提交"
      #       exit 0
      #     fi
          
      #     # 有变动则提交
      #     git add package.json
      #     git commit -m "chore: update package.json [skip ci]"
      #     git push 